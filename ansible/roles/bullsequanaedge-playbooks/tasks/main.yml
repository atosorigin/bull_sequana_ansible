---

- set_fact:
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"

- name: Find TOWER_HOST
  assert:
    that:
      - tower_host is defined
      - tower_host != ""        
    fail_msg: "The variable TOWER_HOST is NOT defined ==> read the readme.md to create your first super user"
    success_msg: "The superuser TOWER_HOST is defined: {{ tower_host }}"
  run_once: true
  
- set_fact:
    tower_user: "{{ lookup('env', 'TOWER_USERNAME') }}"

- name: Find TOWER_USERNAME
  assert:
    that:
      - tower_user is defined
      - tower_user != ""        
    fail_msg: "The variable TOWER_USERNAME is NOT defined ==> read the readme.md to create your first super user"
    success_msg: "The superuser TOWER_USERNAME is defined: {{ tower_user }}"
  run_once: true

- set_fact:
    tower_pwd: "{{ lookup('env', 'TOWER_PASSWORD') }}"

- name: Find TOWER_PASSWORD
  assert:
    that:
      - tower_pwd is defined
      - tower_pwd != ""        
    fail_msg: "The variable TOWER_PASSWORD is NOT defined ==> read the readme.md to create your first super user"
    success_msg: "The superuser TOWER_PASSWORD is defined: {{ tower_pwd }}"
  run_once: true

- name: Assure {{ org_name }} organization is present"
  awx.awx.organization:
    name: "{{ org_name }}"
    state: present

- name: Assure that {{ project_name }} exists
  awx.awx.project:
    name: "{{ project_name }}"
    state: present
    organization: "{{ org_name }}"
    local_path: openbmc
    scm_type: manual    

- name: Assure that {{ inv_name }} exists
  awx.awx.inventory:
    name: "{{ inv_name }}"
    organization: "{{ org_name }}"  
    state: present  

- name: Add 10.22.89.194 host
  awx.awx.host:
    name: 10.22.89.194
    inventory: "{{ inv_name }}"
    state: present
    variables:
      baseuri: "{{ inventory_hostname }}"
      username: root
      password: "Sdd@atos"

- name: Add {{group_name}} group
  awx.awx.group:
    name: "{{ group_name }}"
    inventory: "{{ inv_name }}"
    state: present
    hosts: 
      - 10.22.89.194

- name: Find all job templates
  find:
    paths: projects/openbmc
    recurse: no
    file_type: file
    patterns: '*.yml'
    excludes: 'utils_*,wait_*,should_*,assert_*' 
  run_once: true
  register: find_jobs

- name: Template a file to create_jobs.yml
  ansible.builtin.template:
    src: ../templates/create_job.yml.j2
    dest: roles/bullsequanaedge-playbooks/tasks/create_jobs.yml
  with_items: find_jobs
  run_once: true

- include: roles/bullsequanaedge-playbooks/tasks/create_jobs.yml
  run_once: true
  